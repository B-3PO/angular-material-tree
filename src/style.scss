$baseline-grid: 8px !default;
$list-item-primary-icon-width: $baseline-grid * 3 !default;
$list-item-height: 6 * $baseline-grid !default;


md-tree {
  &:not(.md-no-animation) {
    md-branch .md-branch-icon {
      transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    }
  }

  md-branch {
    .md-branch-icon-container {
      display: flex;
      flex-direction: column;
      min-height: 72px;
      width: 60px;
      justify-content: center;

      .md-branch-icon {
        margin: 0 auto;
        transform: rotate(90deg);
        pointer-events: none;
      }

      & + .checkbox-container .md-container {
        margin-left: 0;
      }
    }

    &.md-open > .md-branch-inner > .md-branch-icon-container .md-branch-icon {
      transform: rotate(-90deg);
    }
  }
}



md-branch {
  position: relative;
  display: block;

  .md-branch-inner {
    // Layout [flex layout-align='start center']
    display: flex;
    justify-content: flex-start;
    align-items: center;
    min-height: $list-item-height;
    height: auto;
    border-bottom: 1px solid transparent;

    cursor: pointer;
    &.md-tip {
      cursor: default;
    }

    // Layout for controls in primary or secondary divs, or auto-infered first child
    & > div.md-primary > md-icon,
    & > div.md-secondary > md-icon,
    & > md-icon:first-child,
    > md-icon.md-secondary {
      width: $list-item-primary-icon-width;
      margin-top: 16px;
      margin-bottom: 12px;
      box-sizing: content-box;
    }
    & > div.md-primary > md-checkbox,
    & > div.md-secondary > md-checkbox,
    & > md-checkbox,
    md-checkbox.md-secondary {
      align-self: center;
      .md-label {
        display: none;
      }
    }


    & > md-checkbox {
      width: 3 * $baseline-grid;
      // @include rtl(margin-left, 3px, 29px);
      // @include rtl(margin-right, 29px, 3px);
      margin-top: 16px;
    }

    .md-secondary-container {
      display: flex;
      align-items: center;

      // Per W3C: https://www.w3.org/TR/css-flexbox/#flex-common
      // By default, flex items wonâ€™t shrink below their minimum content size.
      // Safari doesn't follow that specification due to a bug and expects the developer to
      // explicitly disable flex shrinking.
      flex-shrink: 0;

      // Using margin auto to move them to the end of the list item is more elegant, because it has
      // a lower priority than a flex filler and isn't introducing any overflow issues.
      // The margin on the top is important to align multiple secondary items vertically.
      margin: auto;

      // @include rtl(margin-right, 0, auto);
      // @include rtl(margin-left, auto, 0);

      .md-button, .md-icon-button {
        &:last-of-type {
          // Reset 6px margin for the button.
          // @include rtl-prop(margin-right, margin-left, 0, auto);
        }
      }

      md-checkbox {
        margin-top: 0;
        margin-bottom: 0;

        &:last-child {
          width: 3 * $baseline-grid;
          // @include rtl-prop(margin-right, margin-left, 0, auto);
        }
      }

      md-switch {
        margin-top: 0;
        margin-bottom: 0;

        // @include rtl-prop(margin-right, margin-left, -6px, auto);
      }
    }

    & > p, & > .md-list-item-inner > p {
      flex: 1 1 auto;
      margin: 0;
    }
  }


  &.md-2-line,
  &.md-3-line {
    &, & > .md-no-style {
      align-items: flex-start;
      justify-content: center;

      .md-branch-text {
        flex: 1 1 auto;
        margin: auto;
        text-overflow: ellipsis;
        overflow: hidden;

        h3 {
          font-size: 16px;
          font-weight: 400;
          letter-spacing: 0.010em;
          margin: 0;
          line-height: 1.2em;
          overflow: hidden;
          white-space: nowrap;
          text-overflow: ellipsis;
        }
        h4 {
          font-size: 14px;
          letter-spacing: 0.010em;
          margin: 3px 0 1px;
          font-weight: 400;
          line-height: 1.2em;
          overflow: hidden;
          white-space: nowrap;
          text-overflow: ellipsis;
        }
        p {
          font-size: 14px;
          font-weight: 500;
          letter-spacing: 0.010em;
          margin: 0;
          line-height: 1.6em;
        }
      }
    }
  }

  &.md-2-line {
    &, & > .md-no-style {
      height: auto;
      min-height: 72px;
      & .md-branch-inner {
        min-height: 72px;
      }

      > .md-avatar, .md-avatar-icon {
        margin-top: $baseline-grid * 1.5;
      }

      > .md-branch-expand-icon:first-child {
        align-self: flex-start;
      }

      .md-list-item-text {
        flex: 1 1 auto;
      }
    }
  }

  &.md-3-line {
    &, & > .md-no-style {
      height: auto;
      min-height: 88px;

      & .md-branch-inner {
        min-height: 88px;
      }

      > .md-branch-expand-icon:first-child,
      > .md-avatar {
        margin-top: $baseline-grid * 2;
      }
    }
  }
}


md-branch {
  & > .md-branch-container {
    display: none;
    padding-left: 36px; // indentation
  }

  &.md-open {
    & > .md-branch-container {
      display: block;
    }
  }

  & > .md-branch-container {
    &.md-overflow {
      overflow: hidden;
    }
  }

  &:not(.md-no-animation) {
    & > .md-branch-container {
      &.md-show {
        display: block;
        transition: max-height 0.06s cubic-bezier(0.25, 0.8, 0.25, 1),
                    opacity 0.06s cubic-bezier(0.25, 0.8, 0.25, 1);
      }

      &.md-hide {
        display: block;
        transition: max-height 0.12s cubic-bezier(0.25, 0.8, 0.25, 1),
                    opacity 0.12s cubic-bezier(0.25, 0.8, 0.25, 1);
      }
    }
  }
}





// --- MIXINS from ngMaterial ---

$select-option-padding: 16px !default;
$checkbox-width: 20px !default;
$checkbox-height: $checkbox-width !default;
$checkbox-border-radius: 2px !default;
$checkbox-border-width: 2px !default;

// This mixin allows a user to use the md-checkbox css outside of the
// md-checkbox directive.
// See src/components/select/select.scss for an example.
@mixin checkbox-container(
  $checkedSelector: '.md-checked',
  $width: $checkbox-width,
  $height: $checkbox-height,
  $border-width: $checkbox-border-width,
  $border-radius: $checkbox-border-radius) {
  .md-container {
    position: relative;
    top: 50%;
    box-sizing: border-box;
    display: inline-block;
    width: $width;
    height: $height;
    @include rtl(left, 0, auto);
    @include rtl(right, auto, 0);
    margin: auto 24px;

    &:before {
      box-sizing: border-box;
      background-color: transparent;
      border-radius: 50%;
      content: '';
      position: absolute;
      display: block;
      height: auto;
      left: 0;
      top: 0;
      right: 0;
      bottom: 0;
      transition: all 0.5s;
      width: auto;
    }

    &:after {
      box-sizing: border-box;
      content: '';
      position: absolute;
      top: -10px;
      right: -10px;
      bottom: -10px;
      left: -10px;
    }

    .md-ripple-container {
      position: absolute;
      display: block;
      width: auto;
      height: auto;
      left: -15px;
      top: -15px;
      right: -15px;
      bottom: -15px;
    }
  }

  // unchecked
  .md-icon {
    box-sizing: border-box;
    transition: 240ms;
    position: absolute;
    top: 0;
    left: 0;
    width: $width;
    height: $height;
    border-width: $border-width;
    border-style: solid;
    border-radius: $border-radius;
  }

  &#{$checkedSelector} .md-icon {
    border-color: transparent;

    &:after {
      box-sizing: border-box;
      transform: rotate(45deg);
      position: absolute;
      left: $width / 3 - $border-width;
      top: $width / 9 - $border-width;
      display: table;
      width: $width / 3;
      height: $width * 2 / 3;
      border-width: $border-width;
      border-style: solid;
      border-top: 0;
      border-left: 0;
      content: '';
    }
  }

  // disabled
  &[disabled] {
    cursor: default;
  }

  &.md-indeterminate .md-icon {
    &:after {
      box-sizing: border-box;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      display: table;
      width: $width * 0.6;
      height: $border-width;
      border-width: $border-width;
      border-style: solid;
      border-top: 0;
      border-left: 0;
      content: '';
    }
  }
}


@mixin rtl($prop, $ltr-value, $rtl-value) {
  #{$prop}: $ltr-value;
  [dir=rtl] & {
    #{$prop}: $rtl-value;
  }
}


// Checkbox style
$select-option-padding: 16px !default;
$checkbox-width: 20px !default;
$checkbox-height: $checkbox-width !default;
$checkbox-border-radius: 2px !default;
$checkbox-border-width: 2px !default;

md-branch.md-checkbox-enabled {
  @include checkbox-container('[selected]');
}
